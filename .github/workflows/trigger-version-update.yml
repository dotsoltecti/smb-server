name: SMB Version Update

permissions:
  contents: write
  packages: write

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  check-versions:
    runs-on: ubuntu-latest
    outputs:
      stable_smb_version: ${{ steps.stable_check.outputs.version }}
      edge_smb_version: ${{ steps.edge_check.outputs.version }}
      stable_needs_update: ${{ steps.stable_compare.outputs.needs_update }}
      edge_needs_update: ${{ steps.edge_compare.outputs.needs_update }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check latest Stable Alpine SMB version
        id: stable_check
        run: |
          ALPINE_STABLE=$(curl -s https://dl-cdn.alpinelinux.org/alpine/ | grep -oP '(?<=href=")v[0-9]+\.[0-9]+(?=/")' | sort -V | tail -n 1 | tr -d 'v')
          VERSION=$(curl -s "https://pkgs.alpinelinux.org/package/v$ALPINE_STABLE/main/x86_64/samba" | grep -oP '>\K[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check latest Edge Alpine SMB version
        id: edge_check
        run: |
          VERSION=$(curl -s "https://pkgs.alpinelinux.org/package/edge/main/x86_64/samba" | grep -oP '>\K[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compare stable version with latest tag
        id: stable_compare
        run: |
          git fetch --tags
          LAST_TAG=$(git tag --list 'smb-stable-*' | sort -V | tail -n 1 | sed 's/smb-stable-//')
          if [ "$LAST_TAG" != "${{ steps.stable_check.outputs.version }}" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare edge version with latest tag
        id: edge_compare
        run: |
          git fetch --tags
          LAST_TAG=$(git tag --list 'smb-edge-*' | sort -V | tail -n 1 | sed 's/smb-edge-//')
          if [ "$LAST_TAG" != "${{ steps.edge_check.outputs.version }}" ]; then
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

  build-stable:
    needs: check-versions
    if: needs.check-versions.outputs.stable_needs_update == 'true'
    uses: ./.github/workflows/build-and-push.yml
    with:
      smb_version: ${{ needs.check-versions.outputs.stable_smb_version }}
      variant: stable

  build-edge:
    needs: check-versions
    if: needs.check-versions.outputs.edge_needs_update == 'true'
    uses: ./.github/workflows/build-and-push.yml
    with:
      smb_version: ${{ needs.check-versions.outputs.edge_smb_version }}
      variant: edge
