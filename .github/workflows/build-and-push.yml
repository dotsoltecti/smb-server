name: Build and Push SMB Container

on:
  workflow_call:
    inputs:
      smb_version:
        required: true
        type: string
      variant:
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/smb-server
          docker build --build-arg ALPINE_VARIANT=${{ inputs.variant }} -t $IMAGE_NAME:${{ inputs.variant }}-${{ inputs.smb_version }} .
          docker tag $IMAGE_NAME:${{ inputs.variant }}-${{ inputs.smb_version }} $IMAGE_NAME:${{ inputs.variant }}

      - name: Push Docker image to GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/smb-server
          docker push $IMAGE_NAME:${{ inputs.variant }}-${{ inputs.smb_version }}
          docker push $IMAGE_NAME:${{ inputs.variant }}

      - name: Update Git tags
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git fetch --tags
          TAG_NAME="smb-${{ inputs.variant }}-${{ inputs.smb_version }}"
          if git ls-remote --tags origin | grep -q "refs/tags/$TAG_NAME"; then
            git push origin --delete "$TAG_NAME"
            git tag -d "$TAG_NAME" || true
          fi
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          git tag -f smb-${{ inputs.variant }}-latest
          git push origin smb-${{ inputs.variant }}-latest --force

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: smb-${{ inputs.variant }}-${{ inputs.smb_version }}
          name: "SMB Server (${{ inputs.variant }}) ${{ inputs.smb_version }}"
          body: "A new version of the SMB server container has been built from the **${{ inputs.variant }}** Alpine branch: **${{ inputs.smb_version }}**"
          draft: false
          prerelease: ${{ inputs.variant == 'edge' }}
